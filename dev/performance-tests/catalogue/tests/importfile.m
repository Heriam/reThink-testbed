function [dem_req_rate,req_rate_applede,con_rate_applede,min_rep_rate_applede,avg_rep_rate_applede,max_rep_rate_applede,stddev_rep_rate_applede,resp_time_applede,net_io_applede,errors_applede] = importfile(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [DEM_REQ_RATE,REQ_RATE_APPLEDE,CON_RATE_APPLEDE,MIN_REP_RATE_APPLEDE,AVG_REP_RATE_APPLEDE,MAX_REP_RATE_APPLEDE,STDDEV_REP_RATE_APPLEDE,RESP_TIME_APPLEDE,NET_IO_APPLEDE,ERRORS_APPLEDE]
%   = IMPORTFILE(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   [DEM_REQ_RATE,REQ_RATE_APPLEDE,CON_RATE_APPLEDE,MIN_REP_RATE_APPLEDE,AVG_REP_RATE_APPLEDE,MAX_REP_RATE_APPLEDE,STDDEV_REP_RATE_APPLEDE,RESP_TIME_APPLEDE,NET_IO_APPLEDE,ERRORS_APPLEDE]
%   = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [dem_req_rate,req_rate_applede,con_rate_applede,min_rep_rate_applede,avg_rep_rate_applede,max_rep_rate_applede,stddev_rep_rate_applede,resp_time_applede,net_io_applede,errors_applede]
%   = importfile('results.tab',2, 11);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2016/06/06 13:10:27

%% Initialize variables.
delimiter = '\t';
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
dem_req_rate = dataArray{:, 1};
req_rate_applede = dataArray{:, 2};
con_rate_applede = dataArray{:, 3};
min_rep_rate_applede = dataArray{:, 4};
avg_rep_rate_applede = dataArray{:, 5};
max_rep_rate_applede = dataArray{:, 6};
stddev_rep_rate_applede = dataArray{:, 7};
resp_time_applede = dataArray{:, 8};
net_io_applede = dataArray{:, 9};
errors_applede = dataArray{:, 10};

